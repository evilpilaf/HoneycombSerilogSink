# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
  paths:
    exclude:
    - .editorconfig
    - .gitattributes
    - .gitignore
    - LICENSE.TXT
    - README.md

name: $(Rev:r)

jobs:
- job: Windows

  pool:
    vmImage: 'windows-2019'

  steps:
    - task: UseDotNet@2
      displayName: "Add dotnet core 2.1"
      inputs:
        version: 2.1.x
        packageType: sdk
        includePreviewVersions: false

    - task: UseDotNet@2
      displayName: "Use dotnet core 3.1"
      inputs:
        version: 3.1.x
        packageType: sdk
        includePreviewVersions: true

    - task: DotNetCoreCLI@2
      displayName: "Restore packages"
      inputs:
        command: "restore"
        projects: "HoneycombSerilogSink.sln"

    - task: DotNetCoreCLI@2
      displayName: "Build"
      env:
        BUILD_PR: $(SYSTEM.PULLREQUEST.PULLREQUESTNUMBER)
        BUILD_ID: $(BUILD.BUILDNUMBER)
      inputs:
        command: "build"
        projects: "HoneycombSerilogSink.sln"
        arguments: '-c Release'

    - task: DotNetCoreCLI@2
      displayName: 'Test'
      inputs:
        command: 'test'
        projects: 'HoneycombSerilogSink.sln'
        arguments: '--no-restore --no-build -c Release --collect "Code coverage"'

    - task: DotNetCoreCLI@2
      displayName: 'Package'
      condition: and(succeeded(), ne(variables['Build.Reason'], 'PullRequest'))
      env:
        BUILD_PR: $(SYSTEM.PULLREQUEST.PULLREQUESTNUMBER)
        BUILD_ID: $(BUILD.BUILDNUMBER)
      inputs:
        command: 'pack'
        arguments: '--output $(Build.ArtifactStagingDirectory) --configuration $(buildConfiguration) --no-build'

    - task: PublishBuildArtifacts@1
      displayName: 'Publish built artifacts'
      condition: and(succeeded(), ne(variables['Build.Reason'], 'PullRequest'))
      env:
        BUILD_PR: $(SYSTEM.PULLREQUEST.PULLREQUESTNUMBER)
        BUILD_ID: $(BUILD.BUILDNUMBER)
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'drop'
        publishLocation: 'Container'
