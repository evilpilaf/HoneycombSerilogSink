steps:
  - task: UseDotNet@2
    inputs:
      useGlobalJson: true
      includePreviewVersions: true
      
  - task: DotNetCoreCLI@2
    displayName: "Restore packages"
    inputs:
      command: "restore"
      projects: "HoneycombSerilogSink.sln"

  - task: DotNetCoreCLI@2
    displayName: "Build"
    env:
      BUILD_PR: $(SYSTEM.PULLREQUEST.PULLREQUESTNUMBER)
      BUILD_ID: $(BUILD.BUILDNUMBER)
    inputs:
      command: "build"
      projects: "HoneycombSerilogSink.sln"
      arguments: "-c $(buildConfiguration)"

  - task: DotNetCoreCLI@2
    displayName: "Test"
    inputs:
      command: "test"
      projects: "HoneycombSerilogSink.sln"
      arguments: '--no-restore --no-build -c $(buildConfiguration) --collect:"XPlat Code Coverage" --logger trx'

  - task: DotNetCoreCLI@2
    inputs:
      command: custom
      custom: tool
      arguments: install --tool-path . dotnet-reportgenerator-globaltool
    displayName: Install ReportGenerator tool

  - pwsh: ./reportgenerator -reports:$(Agent.TempDirectory)/**/coverage.cobertura.xml -targetdir:$(Build.SourcesDirectory)/coverlet/reports -reporttypes:"Cobertura"
    displayName: Create reports

  - task: PublishCodeCoverageResults@1
    displayName: "Publish code coverage"
    inputs:
      codeCoverageTool: Cobertura
      summaryFileLocation: $(Build.SourcesDirectory)/coverlet/reports/Cobertura.xml

  - task: DotNetCoreCLI@2
    displayName: "Package"
    env:
      BUILD_PR: $(SYSTEM.PULLREQUEST.PULLREQUESTNUMBER)
      BUILD_ID: $(BUILD.BUILDNUMBER)
    inputs:
      command: "pack"
      arguments: '.\src\Honeycomb.Serilog.Sink\Honeycomb.Serilog.Sink.csproj --output $(Build.ArtifactStagingDirectory) --configuration $(buildConfiguration) --no-build'

  - task: PublishBuildArtifacts@1
    displayName: "Publish built artifacts"
    env:
      BUILD_PR: $(SYSTEM.PULLREQUEST.PULLREQUESTNUMBER)
      BUILD_ID: $(BUILD.BUILDNUMBER)
    inputs:
      PathtoPublish: "$(Build.ArtifactStagingDirectory)"
      ArtifactName: "nuget"
      publishLocation: "Container"
